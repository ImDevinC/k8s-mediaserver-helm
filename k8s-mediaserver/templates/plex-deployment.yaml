apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.plex.replicaCount }}
  selector:
    matchLabels:
      {{- include "k8s-mediaserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-mediaserver.selectorLabels" . | nindent 8 }}
        app: plex
    spec:
      volumes:
        - name: mediaserver-volume
          persistentVolumeClaim:
            claimName: {{ .Values.general.storage.pvcName }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: plex-config
          image: "docker.io/linuxserver/plex:latest"
          imagePullPolicy: Always
          readinessProbe:
            tcpSocket:
              port: {{ .Values.plex.container.port }}
            initialDelaySeconds: 20
            periodSeconds: 15
          ports:
            - name: plex-port
              containerPort: {{ .Values.plex.container.port }}
              protocol: TCP
          volumeMounts:
            - name: mediaserver-volume
              mountPath: "/config"
              subPath: "config/plex"
            - name: mediaserver-volume
              mountPath: "/movies"
              subPath: "media/movies"
            - name: mediaserver-volume
              mountPath: "/tv"
              subPath: "media/tv"
      {{- with .Values.general.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

